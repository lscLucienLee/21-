1. 创建语料库：在提交请求后，系统应该立即创建一个新的语料库，并返回创建成功的信息。
创建语料库前，系统应询问用户新语料库的名称以及是否需要导入已有的语料库。若需要导入，在创建过程中系统应该自动执行合并语料库的行为。
在语料库创建成功之后，应该由明晰的提示，来告知用户接下来可以进行哪些操作，例如查看语料库、编辑语料库等。
但同时应考虑到因为特殊原因导致的语料库创建失败的情况，例如用户本地空间不足导致的创建失败等。
这些信息需要被系统识别并捕获，然后清晰地呈现给用户。
在提示用户创建失败后，应该有一个或多个按钮供用户进行回溯性质的工作，诸如关闭软件、重新创建、返回主页面等。


2. 更新语料库：在提交新语料后，系统应立即更新语料库，并返回更新成功的信息。
从逻辑上来说，提示更新成功后，下方应该有至少两个按钮，一个用于返回用户上一步的界面，另一个用于查看语料库。
同时应该考虑到因为各种原因导致的新语料添加失败的情况，系统需要捕获导致添加失败的原因，并以文字和弹窗的方式明晰的呈现给用户。
对于不同的失败原因，系统可给出一些通用性建议。
在用户了解完失败原因，关掉弹窗后，系统应该自动回到用户上一步的界面。


3. 合并语料库：在提交请求后，系统应立即合并两个指定的语料库，并返回合并成功的信息。
另外，还应该有更加详细的信息反馈，诸如合并后新语料库的大小。
而且，在合并语料库的过程中，系统应该在完成初步合并后自动对语料库“去重”。
合并成功后，应该有明晰的操作提示，提醒用户“查看新语料库”以及“返回”等。
合并前，系统应询问用户是否需要删除原来的语料库以及新语料库的名称。
